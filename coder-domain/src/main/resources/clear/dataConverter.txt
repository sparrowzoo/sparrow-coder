overwrite
package $package_data_converter;

import com.sparrow.protocol.LoginUser;
import com.sparrow.protocol.SessionContext;
import com.sparrow.protocol.dao.StatusCriteria;
import com.sparrow.support.converter.POInitUtils;
import $package_bo.$persistence_class_nameBO;
import $package_po.$persistence_class_name;
import $package_param.$persistence_class_nameParam;
import $package_query.$persistence_class_nameQuery;
import com.sparrow.support.converter.PO2BOConverter;
import com.sparrow.support.converter.Param2POConverter;
import $package_pager_query.$persistence_class_nameDBPagerQuery;
import java.util.ArrayList;
import java.util.List;
import javax.inject.Named;
import javax.inject.Inject;
import com.sparrow.protocol.BeanCopier;


@Named
public class $persistence_class_nameConverter implements Param2POConverter<$persistence_class_nameParam, $persistence_class_name>, PO2BOConverter<$persistence_class_nameBO, $persistence_class_name> {

    @Inject
    private BeanCopier beanCopier;

    public $persistence_class_nameDBPagerQuery toDbPagerQuery($persistence_class_nameQuery $persistence_object_nameQuery) {
           if ($persistence_object_nameQuery == null) {
               return new $persistence_class_nameDBPagerQuery();
           }
           $persistence_class_nameDBPagerQuery $persistence_object_name = new $persistence_class_nameDBPagerQuery();
           beanCopier.copyProperties($persistence_object_nameQuery, $persistence_object_name);
           return $persistence_object_name;
       }

    @Override public $persistence_class_name param2po($persistence_class_nameParam param) {
        $persistence_class_name $persistence_object_name = new $persistence_class_name();
        beanCopier.copyProperties(param, $persistence_object_name);
        $init_po
        return $persistence_object_name;
    }

    @Override public $persistence_class_nameBO po2bo($persistence_class_name $persistence_object_name) {
        $persistence_class_nameBO $persistence_object_nameBO = new $persistence_class_nameBO();
        beanCopier.copyProperties($persistence_object_name, $persistence_object_nameBO);
        $set_display_text
        return $persistence_object_nameBO;
    }

    @Override public List<$persistence_class_nameBO> poList2BoList(List<$persistence_class_name> list) {
        List<$persistence_class_nameBO> $persistence_object_nameBos = new ArrayList<>(list.size());
        for ($persistence_class_name $persistence_object_name : list) {
            $persistence_object_nameBos.add(this.po2bo($persistence_object_name));
        }
        return $persistence_object_nameBos;
    }

    public void convertStatus(StatusCriteria statusCriteria){
            LoginUser loginUser = SessionContext.getLoginUser();
            statusCriteria.setModifiedUserName(loginUser.getUserName());
            statusCriteria.setGmtModified(System.currentTimeMillis());
            statusCriteria.setModifiedUserId(loginUser.getUserId());
    }
}
