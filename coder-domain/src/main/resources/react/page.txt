"use client";

import * as React from "react";
import {useEffect, useState} from "react";
import {columns, $persistence_class_name} from "@/components/$persistence_object_by_horizontal/columns";
import {DataTable} from "@/common/components/table/data-table";
import Search from "@/components/$persistence_object_by_horizontal/search";
import Operation from "@/components/$persistence_object_by_horizontal/operation";
import EditPage from "@/components/$persistence_object_by_horizontal/edit";
import ThreeDotLoading from "@/common/components/ThreeDotLoading";
import $persistence_class_nameApi from "@/api/auto/$persistence_object_by_horizontal";
import {useTranslations} from "next-intl";
import toast from "react-hot-toast";
import Result, {PagerResult} from "@/common/lib/protocol/Result";




export default function Page() {
    const errorTranslate = useTranslations("$persistence_class_name.ErrorMessage");
    const globalTranslate = useTranslations("GlobalForm");

    const [dataState, setDataState] = useState<Result<PagerResult<$persistence_class_name>> | undefined>();
    const init = () => {
                $persistence_class_nameApi.search({}, errorTranslate).then(
                    (res) => {
                        setDataState(res)
                    }
                ).catch(() => {
                });
            };
            useEffect(() => {
                init();
            }, []);


      const deleteHandler= (id: number) => {
            $persistence_class_nameApi.delete(id, errorTranslate).then(()=>{
                toast.success(globalTranslate("delete")+globalTranslate("operation-success"));
            }).catch(()=>{});
        }

    if (!dataState) {
        return <ThreeDotLoading/>
    }
    return (
        <div className="w-full">
            <DataTable<$persistence_class_name>
                SearchComponent={Search}
                OperationComponent={Operation}
                tableName={"$persistence_class_name"}
                primary={"id"}
                i18n={$project_i18n}
                result={dataState}
                columns={columns}
                setData={setDataState}
                EditComponent={EditPage}
                deleteHandler={deleteHandler}
                initHandler={init}
                RowOperationComponents={[]}
            ></DataTable>
        </div>
    );
}
