overwrite
import * as React from "react";
import {useState} from "react";
import {$persistence_class_name} from "@/components/$persistence_object_by_horizontal/columns";
import {MyTableMeta, TableOperationProps} from "@/common/lib/table/DataTableProperty";
import {Button} from "@/components/ui/button";
import $persistence_class_nameApi from "@/api/auto/$persistence_object_by_horizontal";
import {useTranslations} from "next-intl";
import SearchInput from "@/common/components/forms/SearchInput";


type $persistence_class_nameQuery = {
    $frontend_query_fields
}

export default function Search({table}: TableOperationProps<$persistence_class_name>) {
    const meta = table.options.meta as MyTableMeta<$persistence_class_name>;
    const errorTranslate = useTranslations("$persistence_class_name.ErrorMessage")
    const pageTranslate = useTranslations("$persistence_class_name")
    const globalTranslate = useTranslations("GlobalForm");
    const setDataState = meta.setData;
    const [$persistence_object_nameQuery, set$persistence_class_nameQuery] = useState<$persistence_class_nameQuery>()

    if (setDataState == null) {
        return <>setDataState is not defined</>
    }

    const searchHandler = () => {
        $persistence_class_nameApi.search($persistence_object_nameQuery, errorTranslate).then(
            (res) => {
                setDataState(res)
            }
        ).catch(() => {
        });
    };


    return (<>
            $frontend_search_items
            <Button onClick={() => searchHandler()} variant="ghost" className="ml-2">{globalTranslate('search')}</Button>
        </>
    );
}
